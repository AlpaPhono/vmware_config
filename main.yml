---
#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# PLAY1 CONFIGURE MACHINE TO COMMUNICATE WITH VMWARE
#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
- name: info vm demo
  hosts: localhost
  become: yes
  gather_facts: false
  collections:
    - communtiy.vmware
  pretasks:
    - include_vars: vars.yml
#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# TASKS TO INSTALL 3rd PARTY DEPENDANCIES
#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  tasks:
  - name: Install pip
    apt:
      name: python-pip
      state: present
  

  - name: install PyVmomi
    shell: pip3 install PyVmomi
  
  - name: install vSphere Automation SDK for Python
    shell: pip3 install -r ./collections/ansible_collections/community/vmware/requirements.txt


#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# PLAY2 PROVISION VM AND SWITCH
#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
- name: create vm demo
  hosts: localhost
  become: yes
  gather_facts: false

  pre_tasks:
    - include_vars: vars.yml

  tasks:
    - name: create folder
      community.vmware.vcenter_folder
        hostname: "{{"vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_cers: "{{ vcenter_validate_certs }}"
        datacenter_name: "{{ vcenter_datacenter }}"
        folder_name: "{{ vcenter_destination_folder }}"
        folder_type: vm
        state: present

    - name: create VM
      community.vmware.vmware_guest:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_cers: "{{ vcenter_validate_certs }}"
        datacenter_name: "{{ vcenter_datacenter }}"
        name: "{{ vm_name }}" 
        folder: "{{ vcenter_destination_folder }}"
        state: "{{ vm_state }}"
        guest_id: "{{ vm_guestid }}"
        esxi_hostname: "{{ esxi_hostname }}"
        disk:
          - size_gb: "{{ vm_disk_gb }}"
            type: "{{vm_disk_type }}"
            datastore: "{{ vm_disk_datastore }}"
        hardware:
          memory_mb: "{{ vm_hw_ram_mb }}"
          num_cpus: "{{ vm_hw_cpu_n }}"
          scsi: "{{ vm_hw_scsi }}"
        networks:
          - name: "{{ vm_net_name }}"
            device_name: "{{ vm_net_type }}"
  
    - name: Add a VMware vSwitch
  community.vmware.vmware_vswitch:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    switch: "{{ vswitch_name }}"
    nics: "{{ vmnic_name }}"
    mtu: 9000
  delegate_to: localhost


'''
  - name: get VM info
    vmware_guest_info:
      hostname: "{{vcenter_hostname }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      datacenter: "{{ vcenter_datacenter }}"
      validate_verts: "{{ vcenter_validate_certs }}"
      name: "{{ vm_name }}"
    register: detailed_vm_info
  
  - name: print VM info
    ansible.builtin.debug:
      var: detailed_vm_info

''''
